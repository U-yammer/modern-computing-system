CHIP Mux4Way {
    IN a, b, c, d, sel[2];
    OUT out;

    PARTS:
    // prepare not
    Not(in = a, out = notA);
    Not(in = b, out = notB);
    Not(in = c, out = notC);
    Not(in = d, out = notD);
    Not(in = sel[0], out = notSel1);
    Not(in = sel[1], out = notSel2);


    // 構成要素1
    And(a = a, b = notB, out = ele1);
    And(a = notC, b = notD, out = ele2);
    And(a = notSel1, b = notSel2, out = ele3);

    And(a = ele1, b = ele2, out = tmpout1);
    And(a = tmpout1, b = ele3, out = final1);


    // 構成要素2
    And(a = notA, b = b, out = ele4);
    And(a = notC, b = notD, out = ele5);
    And(a = notSel1, b = sel[1], out = ele6);

    And(a = ele4, b = ele5, out = tmpout2);
    And(a = tmpout2, b = ele6, out = final2);


    // 構成要素3
    And(a = notA, b = notB, out = ele7);
    And(a = c, b = notD, out = ele8);
    And(a = sel[0], b = notSel2, out = ele9);

    And(a = ele7, b = ele8, out = tmpout3);
    And(a = tmpout3, b = ele9, out = final3);


    // 構成要素4
    And(a = notA, b = notB, out = ele10);
    And(a = notC, b = d, out = ele11);
    And(a = sel[0], b = sel[1], out = ele12);

    And(a = ele10, b = ele11, out = tmpout4);
    And(a = tmpout4, b = ele12, out = final4);


    Or(a = final1, b = final2, out = lastFinal1);
    Or(a = final3, b = final4, out = lastFinal2);


    Or(a = lastFinal1, b = lastFinal2, out = out);
}
